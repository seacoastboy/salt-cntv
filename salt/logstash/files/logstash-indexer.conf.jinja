input {
  redis { 
    host => '{{ pillar["logstash"]["logstash-indexer"]["redisIp"] }}'
    port => '{{ pillar["logstash"]["logstash-indexer"]["redisPort"] }}'
    data_type => 'list' 
    key => 'logstash:redis' 
    type => 'redis-input' 
    threads => 8
    #message_format => "json_event"
  }
}

filter {
  if [type] == "nginx" {
    grok {
      #pattern => "%{COMBINEDAPACHELOG}"
      match => { "message" => "%{COMBINEDAPACHELOG}" }
      add_tag => ["nginx"]
      patterns_dir => "/opt/logstash/etc/grok-patterns"
      tag_on_failure => [_grokFail]
    }
  }

  if [type] == "apache-newsapp" {
    grok {
      #pattern => "%{COMBINEDAPACHELOG}"
      match => { "message" => "%{COMBINEDNEWSAPP}" }
      add_tag => ["apache"]
      patterns_dir => "/opt/logstash/etc/grok-patterns"
      tag_on_failure => [_grokFail]
    }
  }

  if [response] in ["400","404","500"] {
    mutate {
      add_tag => ["error"]
    }
  }

  if [type] in ["nginx", "apache-newsapp"] {
    geoip {
      source => "clientip"
      add_tag => ["geoip"]
      database => "/opt/logstash/etc/GeoLiteCity.dat"
    }
  }

  if "do_not_delete" in [message] { drop{} }
  if [clientip] == "121.14.54.254" { drop{} }
}

output {
  #stdout { debug => true debug_format => "json"}
  #elasticsearch_http {host => "x.x.x.x"
  #workers => 8}
  elasticsearch {
    workers => 1
    cluster => "elasticsearch-test-cluster"
    node_name => "indexer-{{ grains['id'] }}"
    flush_size => 2000
    idle_flush_time => 5
    template => "/opt/logstash/etc/logstash-2.json"
    template_overwrite => true
  }
}
